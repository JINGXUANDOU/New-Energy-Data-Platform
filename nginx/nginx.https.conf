
#user  root;
#user nobody;#安全检测到隐藏目录
worker_processes  1;

error_log  /var/log/nginx/error.log error;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}
#map $http_upgrade $connection_upgrade {
#     default upgrade;
#    '' close;
#}

http {

    map $http_upgrade $connection_upgrade {
		default upgrade;
		'' close;
	}
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    server_tokens off; # 隐藏Nginx的版本号

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

	# security headers
	add_header X-Frame-Options "SAMEORIGIN" always;
	add_header X-XSS-Protection "1; mode=block" always;
	add_header X-Content-Type-Options "nosniff" always;
	add_header Referrer-Policy "no-referrer-when-downgrade" always;
	#add_header Content-Security-Policy "default-src 'self' http: https://* data: blob: 'unsafe-eval' 'unsafe-inline';" always;
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;


	upstream wscp{
        server 192.168.9.40:18702;
	}
    #服务类型 --- https
    server {
        listen       443 ssl;
        server_name  yjh.biandian.com;

		client_header_buffer_size 16k;
		large_client_header_buffers 4 32k;
		client_max_body_size 128k;
		client_body_buffer_size 128k;

    	# 增加ssl
    	ssl on;        #如果强制HTTPs访问，这行要打开
    	ssl_certificate /etc/nginx/ssl/server.crt;
    	ssl_certificate_key /etc/nginx/ssl/server_nopwd.key;

    	#ssl_session_cache    shared:SSL:50m;
    	ssl_session_timeout  5m;

     	# 指定密码为openssl支持的格式
     	ssl_protocols SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;

    	ssl_ciphers  HIGH:!aNULL:!MD5;  # 密码加密方式
     	ssl_prefer_server_ciphers  on;   # 依赖SSLv3和TLSv1协议的服务器密码将优先于客户端密码
        ssl_verify_client off;

	    proxy_set_header Host $http_host;
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header X-Forwarded-Proto $scheme;
		add_header Access-Control-Allow-Origin *;

        charset utf-8;

        #access_log  logs/host.access.log  main;

		#web平台入口工程
        location / {
            root   /home/cfes/cfes-web/dist/;
            index  index.html index.htm;
	        proxy_set_header X-Real-IP $http_x_real_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	        proxy_ssl_session_reuse off;
			add_header Access-Control-Allow-Origin *;
            charset utf-8;
        }
		#平台服务接口映射
		location /apis {
			rewrite  ^.+apis/(.*)$ /platform/$1 break;
			# Host配置以及域名传递
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $http_x_real_ip;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_pass https://127.0.0.1:18702/;
			proxy_http_version 1.1;
			charset utf-8;
		}
		#日志服务接口映射
		location /logApis {
			rewrite  ^.+logApis/(.*)$ /logs/$1 break;
            proxy_pass https://127.0.0.1:18702/;
			proxy_http_version 1.1;
            charset utf-8;
		}

		#平台图片资源映射
		location /images/ {
			charset utf-8;
			alias /home/cfes/images/;
            #autoindex on;
			add_header Access-Control-Allow-Origin *;
			add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
			add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
		}

		#平台文件资源映射
		location /files/ {
			charset utf-8;
			alias /home/cfes/files/;
            #autoindex on;
			add_header Access-Control-Allow-Origin *;
			add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
			add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
		}
		#websockets配置
		location ^~/websocket/ {
		    #proxy_redirect off;
			proxy_pass http://wscp;
			proxy_set_header Host $host;
            proxy_set_header X-Real_IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
		}
		#location /live {
		#	proxy_pass http://127.0.0.1:8088/;
		#	proxy_http_version 1.1;
		#	proxy_set_header Upgrade $http_upgrade;
		#	proxy_set_header Connection "upgrade";
		#}
		#location /ws/  {
		#	 proxy_pass http://127.0.0.1:18711/;        #通过配置端口指向部署websocker的项目
		#	 proxy_http_version 1.1;
		#	 proxy_set_header Upgrade $http_upgrade;
		#	 proxy_set_header Connection "Upgrade";
		#	 proxy_set_header X-real-ip $remote_addr;
		#	 proxy_set_header X-Forwarded-For $remote_addr;
		#}
		#error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }
}
